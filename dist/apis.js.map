{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./src/index.js","webpack:///./src/vendor.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/str/toCamel.js","webpack:///./node_modules/@webqit/util/str/toTitle.js","webpack:///./node_modules/@webqit/util/arr/intersect.js","webpack:///./src/apis/matchRect.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./node_modules/@webqit/util/arr/any.js","webpack:///./src/apis/fetch.js","webpack:///./src/apis/index.js","webpack:///./src/apis/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","isNaN","castObject","length","slice","values","toString","String","arguments","undefined","this","window","Error","_window","WebQit","_vendor","_prefix","getName","InstallTrigger","test","HTMLElement","safari","pushNotification","isChrome","chrome","webstore","runtime","isEdgeChromium","navigator","userAgent","indexOf","isOpera","opr","addons","opera","isIE","document","documentMode","isEdge","StyleMedia","CSS","getPrefix","styles","getComputedStyle","documentElement","prefix","join","match","Olink","api","RegExp","css","returnValue","obj","keys","forEach","k","callback","parseFloat","Number","keysAll","until","prototypalChain","push","getPrototypeOf","items","itm","arr","getOwnPropertyNames","mergeCallback","objs","deepProps","isReplace","withSymbols","depth","obj1","shift","obj2","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","_flatten","withObjects","reduce","acc","concat","count","firsts","amount","reverse","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","filter","str","delims","options","copyResult","nesting","maxDepth","comments","tokens","matches","matchesi","$cache","cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","cursor","_evalCharsAt","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","nextIndex","quote","block","startsWith","Math","max","testList","ret","useRegex","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","subject","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","beforeLast","replace","txt","charAt","toUpperCase","strict","fromStart","arr2","val1","val2","parserCache","sizeProperties","sizePropertiesAll","map","prop","offsetProperties","intersectionProperties","matchRect","query","now","PQ","parseQuery","parse","meta","vars","args","addVar","varName","vals","addArg","argName","split","chunk","id","trim","queries","exprParse","_exprList","_expr","operator","parseExpr","expr","varNames","argNames","matchedIntersectionProps","matchedIntersectionThresholds","total","index","self","matchedOffsetProps","matchedSizeProps","matchedPercentageSizeProps","prevTest","CSSVal","dispatcher","RectQueryListInstance","RectQueryList","_dispatcher","intersectRoot","offsetParent","scrollParent","IntersectionObserverFactory","resizeObserversObjectForTarget","ResizeObserverFactory","$","offsetParentRect","addEventListener","handleChange","detail","EventTarget","initCallback","super","_rect","rect","changed","dispatchEvent","CustomEvent","contentRect","contentBoxSize","borderBoxSize","registry","type","_root","boundingClientRect","rootBounds","intersectionRect","isConnected","observers","evalQuery","queryObj","evalObj","_queryObj","exprObj","eval","observer","GlobalResizeObserverInstance","GlobalResizeCallbacks","Map","ResizeObserver","entries","entry","resizeRegistry","set","observe","GlobalIntersectionObserverInstances","root","threshold","intersectionObserverForRoot","_intersectionRegistry","_threshold","round","EPSILON","registries","instance","IntersectionObserver","intersectionRegistry","evalExpr","operand_a","operand_b","includes","readVal","inverses","top","bottom","left","right","readIntersection","readRect","readRelativeOffset","percentagesContextRect","unit","rectObject","varsCallback","truthy","exprSplit","operand_b_1","operand_b_2","operand","prev","curr","progressCallback","fetch","url","callProgressCallback","phase","valuenow","valuetotal","progressCallbackReturn","syncWithProgressCallback","Promise","async","resolve","reject","response","contentLength","headers","NaN","recievedLength","reader","body","getReader","chunks","read","done","_response","bodyUsed","ok","redirected","statusText","status","text","data","Uint8Array","position","TextDecoder","decode","then","JSON","blob","Blob","APIS"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,+BC1EtC,gBACd,OAAOC,MAAMC,QAAQC,K,6BCDP,gBACd,OAAQF,MAAMC,QAAQC,IAAuB,iBAARA,GAAoBA,I,wCCK3C,gBACd,OAAOF,MAAMC,QAAQC,IAAwB,iBAARA,GAAoBA,GAAQ,YAAgBA,K,yCCFnE,gBACd,OAAO,YAAUA,KAAiB,IAARA,IAAwB,IAARA,GAAyB,OAARA,GAAwB,KAARA,IAAeC,MAAY,EAAND,K,qECGlF,qBACd,OAAI,YAASA,GACLA,GAEHE,GAAc,YAAUF,GACrB,CAACA,IAEG,IAARA,GAAyB,IAARA,GAAa,YAASA,GACnC,GCVM,YACd,OAAQ,YAAUA,KAAS,YAAaA,EAAIG,QDWxC,CAAaH,GACTF,MAAMJ,UAAUU,MAAMnC,KAAK+B,GAE/B,YAAUA,GACNxB,OAAO6B,OAAOL,GAEf,CAACA,K,wCEpBM,gBACd,OAAO,YAAgBA,IAASA,GAAiC,sBAA1B,GAAGM,SAASrC,KAAK+B,K,6BCN1C,gBACd,OAAOA,aAAeO,QAA0B,iBAARP,GAA4B,OAARA,I,6BCD9C,gBACd,OAAOQ,UAAUL,cAAmBM,IAART,QAAoC,IAARA,K,wCCQ1C,eACX,KAAM,YAAUU,OAASA,KAAKC,QAA8B,oBAAXA,QAC7C,MAAM,IAAIC,MAAM,iCAEpB,MAAMC,EAAU,YAAUH,OAASA,KAAKC,OAASD,KAAKC,OAASA,OAE/D,IAAKE,EAAQC,OAAQ,CAGjB,IAAIC,EAASC,EAFbH,EAAQC,OAAS,GAGjBtC,OAAOC,eAAeoC,EAAQC,OAAQ,SAAU,CAACnC,IAAK,IAAMkC,IAC5DrC,OAAOC,eAAeoC,EAAQC,OAAQ,SAAU,CAAC/B,MAAO,CACpDkC,QAAS,KACAF,IACDA,ECvBb,SAAiBJ,GAGpB,QADiD,IAA1BA,EAAOO,eAE1B,MAAO,UAIX,GADe,eAAeC,KAAKR,EAAOS,cAAwD,wCAAyCT,EAAe,aAA+B,IAAlBA,EAAOU,QAA0BV,EAAOU,OAAOC,kBAAnIhB,WAE/E,MAAO,SAGX,IAAIiB,KAAaZ,EAAOa,SAAab,EAAOa,OAAOC,WAAcd,EAAOa,OAAOE,SAE3EC,EAAiBJ,IAA2D,GAA9CZ,EAAOiB,UAAUC,UAAUC,QAAQ,OAEjEC,IAAapB,EAAOqB,OAASrB,EAAOqB,IAAIC,UAAatB,EAAOuB,OAASvB,EAAOiB,UAAUC,UAAUC,QAAQ,UAAY,EAGpHK,IAA8BxB,EAAOyB,SAASC,aAE9CC,GAAUH,KAAUxB,EAAO4B,WAG/B,OADehB,GAAYQ,IAAcpB,EAAO6B,IACzCF,EAAS,OACZH,EAAO,KACHJ,EAAU,QACNJ,EAAiB,cACbJ,EAAW,SAAW,UDLZ,CAAcV,IAErBE,GAEX0B,UAAW,KACFzB,IACDA,ECWb,SAAmBL,GACtB,IAAI+B,EAAS/B,EAAOgC,iBAAiBhC,EAAOyB,SAASQ,gBAAiB,IAClEC,GAAU/C,MAAMJ,UAAUU,MAAMnC,KAAKyE,GAAQI,KAAK,IAAIC,MAAM,sBAAyC,KAAjBL,EAAOM,OAAgB,CAAC,GAAI,MAAM,GAE1H,MAAO,CACHC,KAFO,kBAAoBF,MAAM,IAAIG,OAAO,IAAML,EAAS,IAAK,OAAS,IAAI,GAG7EA,SACAM,IAAK,IAAMN,EAAS,KDlBE,CAAgBhC,IAEvBG,MAInB,OAAOH,EAAQC,S,6BElCJ,gBACd,MAAsB,mBAARd,I,+CCMA,kBACd,IAAIoD,OAAc3C,EAQlB,OAPI,YAAc4C,IACjB7E,OAAO8E,KAAKD,GAAKE,QAAQ,CAACC,EAAG1F,MACR,IAAhBsF,IACHA,EAAcK,EAAS,YAAWD,GAAKE,WAAWF,GAAKA,EAAGH,EAAIG,GAAI1F,MAI9DsF,I,uDCRO,gBACd,OAAO,YAAQpD,IAAQ,YAAaA,KAAgB,IAARA,GAAyB,IAARA,GACxD,YAAcA,KAASxB,OAAO8E,KAAKtD,GAAKG,S,6BCX/B,gBACd,OAAOH,aAAe2D,QAA0B,iBAAR3D,I,6BCD1B,gBACd,OAAe,OAARA,GAAwB,KAARA,I,sGCMT,gBACd,IAAI4D,EAAU,GAId,OCNc,cAEdC,GADAA,EAAQA,GAASrF,OAAOkB,aACN,YAASmE,GAAS,CAACA,GAASA,EAE9C,IAAIC,EAAkB,GAEtB,IADIT,EAAMA,EACHA,KAASQ,GAASA,EAAM/B,QAAQuB,GAAO,IAAmB,YAAbA,EAAIhF,MACvDyF,EAAgBC,KAAKV,GACrBA,EAAMA,EAAM7E,OAAOwF,eAAeX,GAAO,KAE1C,OAAOS,EDPP,CAAmBT,EAAKQ,GAAON,QAAQF,KERzB,iBACdY,EAAMV,QAAQW,IACTC,EAAIrC,QAAQoC,GAAO,GACtBC,EAAIJ,KAAKG,KFMV,CAAYN,KAAYpF,OAAO4F,oBAAoBf,MAE7CO,GGDO,SAASS,EAAcC,EAAMb,EAAUc,GAAY,EAAOC,GAAY,EAAOC,GAAc,GACzG,IAAIC,EAAQ,EACRC,EAAOL,EAAKM,QAKhB,IAJI,YAAWD,KAAkB,IAATA,IAA0B,IAATA,KACxCD,EAAQC,EACRA,EAAOL,EAAKM,UAERN,EAAKnE,OACT,MAAM,IAAIS,MAAM,gDAqCjB,OAnCA0D,EAAKf,QAAQ,CAACsB,EAAM/G,MACd,YAAc+G,IAAU,YAAYA,MAGxCN,EAAY,EAAqBM,GAAQrG,OAAO4F,oBAAoBS,IAAOtB,QAAQlE,IACnF,GAAKoE,EAASpE,EAAKsF,EAAME,EAAM/G,GAA/B,CAGA,IAAIgH,EAAYH,EAAKtF,GACjB0F,EAAYF,EAAKxF,GACrB,IAAM,YAASyF,IAAc,YAASC,IAAgB,YAAUD,IAAc,YAAUC,OAC1E,IAAVL,GAAkBA,EAAQ,GAE7BC,EAAKtF,GAAO,YAASyF,IAAc,YAASC,GAAa,GAAK,GAC9DV,EAAc,CAAC,YAAWK,GAASA,EAAQ,EAAIA,EAAOC,EAAKtF,GAAMyF,EAAWC,GAAYtB,EAAUc,EAAWC,EAAWC,QAExH,GAAI,YAASE,IAAS,YAASE,GAC1BL,EACHG,EAAKtF,GAAO0F,EAEZJ,EAAKZ,KAAKgB,QAIX,IACKN,EACHjG,OAAOC,eAAekG,EAAMtF,EAAKb,OAAOwG,yBAAyBH,EAAMxF,IAEvEsF,EAAKtF,GAAOwF,EAAKxF,GAEjB,MAAM4F,UAKLN,I,yCClDO,mBACd,OAAO,YAAeL,EAAM,CAACd,EAAGmB,EAAME,KAC9B,GACL,GAAoB,GAAoB,K,gGCA5C,MAAMK,EAAW,SAASf,EAAKO,EAAQ,EAAGS,GAAc,GACvD,OAAK,YAAWT,IAAUA,GAAS,EAC3BP,IAEH,YAASA,IAAQ,YAAUA,IAAQgB,IACvChB,EAAM3F,OAAO6B,OAAO8D,IAEhB,YAASA,GAGPA,EAAIiB,OAAO,CAACC,EAAKrF,IAAQ,YAASA,IAAS,YAAUA,IAAQmF,EACjEE,EAAIC,OAAOJ,EAAU,YAASlF,GAA4BA,EAArBxB,OAAO6B,OAAOL,GAAY0E,EAAQ,EAAGS,IAC1EE,EAAIC,OAAOtF,GAAM,IAJZmE,IAUM,QC1BA,kBACd,IAAIoB,EAAQ,EACZpB,EAAIZ,QAAQW,IACXqB,MAED,IAAIC,EAASrB,EAAI/D,MAAM+D,EAAIhE,OAASoF,EAAOE,GAC3C,OAAOjF,UAAUL,OAAS,EAAIqF,EAASA,EAAO,ICDhC,kBACd,OAAOhF,UAAUL,OAAS,EACvB,EAAOgE,EAAI/D,QAAQsF,UAAWD,GAAQC,UACtC,EAAOvB,EAAI/D,QAAQsF,Y,uBCHR,cACd,OAAO,YAAUrC,IAAQ7E,OAAOwF,eAAeX,KAAS7E,OAAOkB,WCPjD,cACd,OAAe,IAARM,IAAwB,IAARA,G,QCcxB,MAAM2F,EAAQ,SAAShB,EAAME,EAAMe,GAAY,EAAMlB,EAAQ,GAC5D,GAAI,YAASC,IAAS,YAASE,IAASF,EAAKxE,SAAW0E,EAAK1E,OAC5D,OAAQyF,EAET,GAAI,YAAUjB,IAAS,YAAUE,GAAO,CACvC,IAAIgB,EAAWrH,OAAO8E,KAAKqB,GACvBmB,EAAWtH,OAAO8E,KAAKuB,GAC3B,IAAKgB,EAAS1F,SAAW2F,EAAS3F,OAGjC,OAAO,EAAewE,IAAS,EAAeE,GAC3Ce,EACCjB,IAASE,IAAUe,EAExB,IAAKD,EAAME,EAAUC,GACpB,OAAQF,EAGV,GAAIlB,EAAQ,IAAO,YAASC,IAAS,YAASE,IAAW,YAAUF,IAAS,YAAUE,IAAS,CAC9F,IAAIkB,ECnBS,kCACd,GAAI,YAASpB,IAAS,YAASE,GAAO,CACrC,IAAIkB,EAAS,GACTC,GAAQ,EA4BZ,OA3BArB,EAAKpB,QAAQ0C,IACZ,GAAKD,EAAL,CAGA,IAAIE,GAAW,EACf,YAAMrB,EAAM,CAACrB,EAAG2C,OACVD,GAAaE,GAAiB,YAAcH,MAChDC,EAAWN,EAAUK,EAAIE,IACpB,YAASD,KAAcA,EAAS/F,QAAY,YAAU+F,KAAc1H,OAAO8E,KAAK4C,GAAU/F,UAC9F+F,GAAW,GAER,YAAcA,IAAaE,IAE9BH,EAAKC,MAIJ,YAAcA,GACjBH,EAAOhC,KAAKqC,EAAgBF,EAAWD,GAC5B,EAAWC,GAEXG,IAAaH,IAAeG,GAAYH,EACnDH,EAAOhC,KAAKkC,GACFK,IACVN,GAAQ,GAJRD,EAAOhC,KAAKmC,MAOPH,EAGR,GAAI,YAAUpB,IAAS,YAAUE,GAAO,CACnCkB,EAAS,GACTC,GAAQ,EAmBZ,OAlBAxH,OAAO8E,KAAKqB,GAAMpB,QAAQC,IACzB,GAAKwC,EAAL,CAGA,IAAIE,EAAWN,EAAUjB,EAAKnB,GAAIqB,EAAKrB,KAClC,YAAS0C,KAAcA,EAAS/F,QAAY,YAAU+F,KAAc1H,OAAO8E,KAAK4C,GAAU/F,UAC9F+F,GAAW,GAER,YAAcA,GACjBH,EAAOvC,GAAK4C,EAAgBF,EAAWvB,EAAKnB,GACjC,EAAW0C,GAEXG,IAAaH,IAAeG,GAAYH,EACnDH,EAAOvC,GAAKmB,EAAKnB,GACP8C,IACVN,GAAQ,GAJRD,EAAOvC,GAAK0C,KAOPH,GDpCM,CAAiBpB,EAAME,EAAM,CAACoB,EAAIE,IACvCR,EAAMM,EAAIE,EAAIP,EAAWlB,EAAQ,IACtC,GAAwB,GAAmB,GAC9C,OAAO,YAASqB,GACbA,EAAO5F,SAAWwE,EAAKxE,QAAU4F,EAAO5F,SAAW0E,EAAK1E,OACvD,YAAU4F,IAAW,YAAUpB,GAC/BnG,OAAO8E,KAAKyC,GAAQ5F,SAAW3B,OAAO8E,KAAKqB,GAAMxE,QAAU3B,OAAO8E,KAAKyC,GAAQ5F,SAAY3B,OAAO8E,KAAKuB,GAAM1E,OAC7G4F,EAEL,OAAO,YAAYH,GAAaA,EAAUjB,EAAME,GAC/C,YAAUF,IAAS,YAAUE,IAAS5E,MAAM0E,IAAS1E,MAAM4E,GACxDe,EACCjB,IAASE,IAAUe,GAOV,Q,QE5CA,mBACd,OAAO,YAAe,CAAC,GAAIvC,GAAM,CAAChE,EAAKsF,EAAME,KAC5C,IAAK,YAAYA,EAAKxF,IACrB,OAAO,YAAYkH,GAAUA,EAAOlH,IAChC,YAASkH,KAAWA,EAAOpG,QAASoG,EAAOzE,QAAQzC,IAAQ,IAE9D,GAAoB,GAAoB,ICF7B,MAAM,EASpB,WAAWmH,EAAKC,EAAQC,EAAU,IACjC,IAAK,YAAUF,GAAY,IAC1B,MAAM,IAAI5F,MAAM,+BAEjB,IAAI+F,EAAaZ,IACT,CACNU,OAAQV,EAAOU,OAAOrG,QACtBsG,QAAS,EAAWX,EAAOW,SAC3BE,QAASb,EAAOa,QAAQxG,QACxByG,SAAUd,EAAOc,SACjBC,SAAUf,EAAOe,SAAS1G,QAC1B2G,OAAQhB,EAAOgB,OAAO3G,QACtB4G,QAASjB,EAAOiB,QAAQ5G,QACxB6G,SAAU,EAAWlB,EAAOkB,YAI9B,GAAI,EAAMC,OAAOV,KAA0B,IAAlBE,EAAQS,MAChC,IAAK,IAAIrJ,EAAI,EAAGA,EAAI,EAAMoJ,OAAOV,GAAKrG,OAAQrC,IAAM,CACnD,IAAIsJ,EAAS,EAAMF,OAAOV,GAAK1I,GAC/B,GAAI,EAAMsJ,EAAOX,OAAQA,GACxB,OAAOE,EAAWS,GAKrB,IACIrB,EADW,IAAI,EAAMS,EAAKE,GACRW,IAAIZ,GAM1B,OAJsB,IAAlBC,EAAQS,QACX,EAAMD,OAAOV,GAAO,EAAMU,OAAOV,IAAQ,GACzC,EAAMU,OAAOV,GAAKzC,KAAKgC,IAEjBY,EAAWZ,GAWnB,aAAaS,EAAKC,EAAQC,GACzB,OAAO,EAAMW,IAAIb,EAAKC,EAAQC,GAASK,OAUxC,aAAaP,EAAKC,EAAQC,GACzB,OAAO,EAAMW,IAAIb,EAAKC,EAAQC,GAASM,QAcxC,YAAYR,EAAKE,GAChB,IAAK,YAAUF,GACd,MAAM,IAAI5F,MAAM,qDAEjBF,KAAK4G,KAAOd,EACZ9F,KAAK6G,SAAWb,GAAW,GACtBhG,KAAK6G,SAASC,SAClB9G,KAAK6G,SAASC,OAAS,EAAMC,SAEzB/G,KAAK6G,SAASG,SAClBhH,KAAK6G,SAASG,OAAS,EAAMC,SAEzBjH,KAAK6G,SAAST,WAClBpG,KAAK6G,SAAST,SAAW,EAAMc,WAejC,IAAInB,EAAQC,GAaX,IAZA,IAAIhF,EAAU,CACb+E,OAAQ,YAASA,GACjBC,QAAS,aAAO,EAAM,GAAIhG,KAAK6G,SAAUb,GAAW,IACpDE,QAAS,GACTC,SAAU,EACVC,SAAU,GACVC,OAAQ,GACRC,QAAS,GACTC,SAAU,IAGPY,EAAS,EACW,iBAAXA,GACZA,EAASnH,KAAKoH,aAAapG,EAASmG,GAErC,GAAInG,EAAQkF,QAAQzG,OACnB,MAAM,IAAIS,MAAM,6BAA+BF,KAAK4G,KAAO,0BAA4B,EAAS5F,EAAQkF,SAAS9D,KAAK,OAGvH,OAAOpB,EAYR,aAAaA,EAAS5D,GACrB,KAAIA,GAAK4C,KAAK4G,KAAKnH,QAAnB,CAGA,IAAI4H,EAAY,EACZC,EAAc,GAAIC,EAAY,GAAIC,EAAc,GAUpD,GARKxG,EAAQyG,cACZF,EAAYvH,KAAK0H,YAAY1G,EAAS5D,IAGlC4D,EAAQ2G,YACZL,EAActH,KAAK4H,cAAc5G,EAAS5D,IAGvC4D,EAAQyG,aAAeH,EAAYO,OAEtC,GAAK7G,EAAQkF,QAAQzG,QAAW+H,EAAYK,OAK3C7H,KAAK8H,MAAM9G,EAAShB,KAAK4G,KAAKxJ,SAH9BiK,GADIU,EAAQT,EAAYU,UAAYV,EAAYO,QAAU7H,KAAK4G,KAAKxJ,IAClDqC,OAClBO,KAAK8H,MAAM9G,EAAS+G,EAAO,WAAYT,EAAYU,eAI9C,GAAIhH,EAAQ2G,WAAaJ,EAAUM,OAEzC7H,KAAK8H,MAAM9G,EAAShB,KAAK4G,KAAKxJ,QACxB,IAAI4D,EAAQgF,QAAQiC,OAASjH,EAAQsF,QAAQ7G,SAAWuB,EAAQgF,QAAQiC,MAE9E,OADAjI,KAAK8H,MAAM9G,EAAShB,KAAK4G,KAAKxJ,IACvBA,EAAI,EAGXoK,EAAcxH,KAAKkI,aAAalH,EAAS5D,GAIrCoK,EAAcxH,KAAKkI,aAAalH,EAAS5D,GAA7C,IAEI+K,EAAWnI,KAAKoI,WAAWpH,EAAQgF,QAAQqC,WAAa,GAAIrH,EAAS5D,GACzE,IAAK4D,EAAQkF,QAAQzG,SAAuB,IAAb0I,EAG9B,OAFAnH,EAAQgF,QAAQmC,SAAWA,OAC3BnH,EAAQgF,QAAQsC,gBAAkBtI,KAAK4G,KAAK2B,OAAOnL,IAMpD,GAAK4D,EAAQ+E,OAAOtG,OAiBnB,GAAKuB,EAAQkF,QAAQzG,QAAW+H,EAAYK,OAsBrC,CACN,IAAIE,EACJV,GADIU,EAAQP,EAAYQ,UAAYR,EAAYK,QAAU7H,KAAK4G,KAAKxJ,IAClDqC,OAClBO,KAAK8H,MAAM9G,EAAS+G,OAzB+B,CAGnD/H,KAAK8H,MAAM9G,EAAS,IACpB,IAAIwH,EAAexI,KAAKoI,WAAWpH,EAAQ+E,OAAQ/E,EAAS5D,GAC5D,IAAqB,IAAjBoL,IACHxH,EAAQsF,QAAQjD,KAAKmF,GACrBxH,EAAQuF,SAASnJ,GAAKoL,EACtBnB,EAAYmB,EAAa/I,QAAU,GAC9BuB,EAAQgF,QAAQyC,gBAAgB,CAGpC,IAAIC,EAAYtL,GAAKoL,EAAa/I,QAAU,GAM5C,OALIiJ,IAAc1I,KAAK4G,KAAKnH,QAG3BO,KAAK8H,MAAM9G,EAAS,IAEd0H,EAGT1I,KAAK8H,MAAM9G,EAASwH,GAAgBxI,KAAK4G,KAAKxJ,SApChB,IAA3B4D,EAAQkF,QAAQzG,QAAgB+H,EAAYQ,UAC/ChH,EAAQsF,QAAQjD,KAAK,MACrBrD,KAAK8H,MAAM9G,EAASwG,EAAYQ,UAChCX,EAAYG,EAAYQ,SAASvI,SACtBuB,EAAQkF,QAAQzG,QAAU+H,EAAYK,QACjD7H,KAAK8H,MAAM9G,EAASwG,EAAYK,QAChCR,EAAYG,EAAYK,OAAOpI,OAC/BuB,EAAQsF,QAAQjD,KAAK,OAErBrD,KAAK8H,MAAM9G,EAAShB,KAAK4G,KAAKxJ,IAmCjC,OAAOA,EAAIiK,GAWZ,YAAYrG,EAAS5D,GACpB,IAAIiI,EAAS,GAYb,OAXCrE,EAAQgF,QAAQgB,QAAU,IAAInE,QAAQ8F,IAClC3I,KAAK4G,KAAK2B,OAAOnL,EAAG,KAAOuL,IACzB3H,EAAQ2G,UAGFgB,IAAU3H,EAAQ2G,YAC5B3G,EAAQ2G,WAAY,EACpBtC,EAAOwC,OAASc,IAJhB3H,EAAQ2G,UAAYgB,EACpBtD,EAAO2C,SAAWW,MAOdtD,EAWR,cAAcrE,EAAS5D,GACtB,IAAIiI,EAAS,GAgBb,OAfCrE,EAAQgF,QAAQI,UAAY,IAAIvD,QAAQ+F,IACxC,GAAK5H,EAAQyG,aAMN,GAAI,EAAMmB,KAAW,EAAM5H,EAAQyG,aAAc,CACvD,IAAII,EAAS,EAAMe,GACf5I,KAAK4G,KAAK2B,OAAOnL,GAAGyL,WAAWhB,KAClC7G,EAAQyG,aAAc,EACtBpC,EAAOwC,OAASA,QAVQ,CACzB,IAAIG,EAAW,EAAOY,GAClB5I,KAAK4G,KAAK2B,OAAOnL,GAAGyL,WAAWb,KAClChH,EAAQyG,YAAcmB,EACtBvD,EAAO2C,SAAWA,MAUd3C,EAWR,aAAarE,EAAS5D,GACrB,IAAIiI,EAAS,GAeb,OAdCrE,EAAQgF,QAAQc,QAAU,IAAIjE,QAAQ+F,IACtC,IAAIZ,EAAW,EAAOY,GACtB,GAAI5I,KAAK4G,KAAK2B,OAAOnL,GAAGyL,WAAWb,GAClChH,EAAQkF,QAAUlF,EAAQkF,QAAQtB,OAAO,CAACgE,IAC1CvD,EAAO2C,SAAWA,OACZ,GAAIhH,EAAQkF,QAAQzG,QAAU,EAAMmJ,KAAW,EAAM,EAAM5H,EAAQkF,UAAW,CACpF,IAAI2B,EAAS,EAAMe,GACf5I,KAAK4G,KAAK2B,OAAOnL,GAAGyL,WAAWhB,KAClC7G,EAAQkF,QAAUlF,EAAQkF,QAAQxG,MAAM,GAAI,GAC5C2F,EAAOwC,OAASA,MAInB7G,EAAQmF,SAAW2C,KAAKC,IAAI/H,EAAQmF,SAAUnF,EAAQkF,QAAQzG,QACvD4F,EAYR,WAAW2D,EAAUhI,EAAS5D,GAC7B,IAAK,IAAI0F,EAAI,EAAGA,EAAIkG,EAASvJ,OAAQqD,IAAM,CAC1C,IAAIrC,EAAOuI,EAASlG,GACpB,GAAI,YAAYrC,GAAO,CACtB,IAAIwI,EAAMxI,EAAKT,KAAK4G,KAAK2B,OAAO,EAAGnL,GAAI4C,KAAK4G,KAAK2B,OAAOnL,IACxD,IAAY,IAAR6L,EACH,OAAOA,EAGT,GAAIjI,EAAQgF,QAAQkD,SAAU,CAC7B,IAAI1L,EAAIwC,KAAK4G,KAAK2B,OAAOnL,GAAGiF,MAAM,IAAIG,OAAO,IAAM/B,GAAmC,IAA7BO,EAAQgF,QAAQkD,SAAoBlI,EAAQgF,QAAQkD,SAAW,KACxH,GAAI1L,EACH,OAAOA,EAAE,GAGX,IAAMwD,EAAQgF,QAAQmD,IAAMnJ,KAAK4G,KAAK2B,OAAOnL,EAAGqD,EAAKhB,UAAYgB,GAC7DO,EAAQgF,QAAQmD,IAAMnJ,KAAK4G,KAAK2B,OAAOnL,EAAGqD,EAAKhB,QAAQ2J,gBAAkB3I,EAAK2I,cACjF,OAAO3I,EAGT,OAAO,EAaR,MAAMO,EAAS+G,EAAOsB,EAAS,SAAUC,GAAc,GACtD,IAAIC,EAAcvI,EAAQsF,QAAQ7G,OAKlC,GAJI,YAAauB,EAAQqF,OAAOkD,MAC/BvI,EAAQqF,OAAOkD,GAAe,IAGhB,aAAXF,EAAuB,CACrBrI,EAAQqF,OAAOkD,GAAanD,WAChCpF,EAAQqF,OAAOkD,GAAe,IAAI1J,OAAOmB,EAAQqF,OAAOkD,IACxDvI,EAAQqF,OAAOkD,GAAanD,SAAW,IAExC,IAAIoD,EAAexI,EAAQqF,OAAOkD,GAAanD,SAAS3G,SAAWuB,EAAQqF,OAAOkD,GAAanD,SAAS3G,QAAU6J,EAAc,EAAI,GACpItI,EAAQqF,OAAOkD,GAAanD,SAASoD,IAAiBxI,EAAQqF,OAAOkD,GAAanD,SAASoD,IAAiB,IAAMzB,MAC5G,CACS/G,EAAQqF,OAAOkD,GAAanD,SAC3CpF,EAAQqF,OAAOkD,GAAevI,EAAQqF,OAAOkD,GAAexB,GAa9D,MAAMjC,EAAKC,EAAQC,GAClB,OAAOhG,KAAK2G,IAAIZ,EAAQC,GAASK,OAWlC,MAAMP,EAAKC,EAAQC,GAClB,OAAOhG,KAAK2G,IAAIZ,EAAQC,GAASM,QAWlC,SAASP,EAAQC,GAChB,OAAOhG,KAAK2G,IAAIZ,EAAQ,YAAO,CAACmD,UAAU,GAAOlD,GAAW,KAW7D,SAASD,EAAQC,GAChB,OAAOhG,KAAKyJ,SAAS1D,EAAQC,GAASK,OAWvC,SAASN,EAAQC,GAChB,OAAOhG,KAAKyJ,SAAS1D,EAAQC,GAASM,SAOxC,EAAMS,QAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAK/C,EAAME,QAAU,CAAC,IAAK,IAAK,KAK3B,EAAMC,UAAY,CAAC,CAAC,KAAM,MAAO,CAAC,KAAM,OAKxC,EAAMV,OAAS,G,YCldA,kBACd,OAAOkD,EAAQb,WAAWc,IAAeD,EAAQE,SAASC,ICD5C,qBACd,GAAc,IAAVC,EACH,OAAOJ,EAER,IAAIK,EAAMC,EAAYN,EAAQO,YAAYH,GAAUJ,EAAQtI,QAAQ0I,GACpE,OAAa,IAATC,EACI,GAEDL,EAAQnB,OAAOwB,EAAMD,EAAOrK,SCFrB,kBACd,OCHc,cACd,OCLc,mBACd,GAAc,IAAVqK,EACH,OAAOJ,EAER,IAAIK,EAAMG,EAAaR,EAAQO,YAAYH,GAAUJ,EAAQtI,QAAQ0I,GACrE,OAAa,IAATC,EACIL,EAEDA,EAAQnB,OAAO,EAAGwB,GDHlB,CAAQL,EAASI,GAAQ,GDEzB,CAAY,EAAOJ,EAASC,GAAaE,IGHlC,gBAGd,OADA/D,ECPc,cACd,MAAmB,iBAARA,EACHA,EAEDA,EAAIqE,QAAQ,UAAW,SAASC,GAAO,OAAOA,EAAIC,OAAO,GAAGC,oBAAoCvK,WAAXwK,GAAwBA,EAAUH,EAAI7B,OAAO,GAAGa,cAAgBgB,EAAI7B,OAAO,ODGjK,CAASzC,EAAIqE,QAAQ,KAAM,MAAMA,QAAQ,KAAM,IAC9CK,EAAY1E,EAAMA,EAAI,GAAGsD,cAAgBtD,EAAIyC,OAAO,IED7C,uBACd,OAAQ,YAASkC,GAAahH,EAAIoC,OAAO6E,GAAQ3H,EAC9C0H,EAAK5E,OAAO8E,GAAQ5H,EAAS2H,EAAMC,IAAOlL,QAClB,IAAxBgL,EAAKrJ,QAAQsJ,IAFS,ICK1B,MAAME,EAAc,GACdC,EAAiB,CAAC,QAAS,UAC3BC,EAAoBD,EAAejG,OAAOiG,EAAeE,IAAIC,GAAQ,SAAWA,GAAOH,EAAeE,IAAIC,GAAQ,SAAWA,IAC7HC,EAAmB,CAAC,MAAO,OAAQ,QAAS,UAC5CC,EAAyBL,EAAeE,IAAIC,GAAQ,gBAAkBA,GAAMpG,OAAOqG,EAAiBF,IAAIC,GAAQ,gBAAkBA,IAWzH,SAASG,EAAU9B,EAAQ+B,EAAOC,GAAM,GACnD,IAAIC,EAAKV,EAAYQ,GAChBE,KACDA,EAmXR,SAASC,EAAWH,GAEhB,IAAII,EAAQ,GAAIC,EAAO,CAACC,KAAM,GAAIC,KAAM,IACpCC,EAAS,CAACC,EAASC,KACdL,EAAKC,KAAKG,KACXJ,EAAKC,KAAKG,GAAW,IAEzBJ,EAAKC,KAAKG,GAASxI,QAAQyI,IAE3BC,EAAS,CAACC,EAAS1M,KACnB,GAAI0M,KAAWP,EAAKE,KAChB,MAAM,IAAIzL,MAAM,2DAA6D8L,GAEjFP,EAAKE,KAAKK,GAAW1M,GAGzB,GAAI8L,EAAO,CAEP,GAAI,EAASA,EAAO,IAAK,KACrB,OAAO,EAAMa,MAAM,EAAQb,EAAO,IAAK,KAAM,CAAC,MAAM1G,OAAO,CAAC/B,EAAKuJ,KAC7D,IAAMC,EAAIf,GAAU,EAAMa,MAAMC,EAAO,CAAC,MAAMnB,IAAI5L,GAAKA,EAAEiN,QACzDzJ,EAAI0J,QAAQF,GAAMZ,EAAWH,GAE7B,YAAMzI,EAAI0J,QAAQF,GAAIV,KAAKC,KAAME,GACjC,YAAMjJ,EAAI0J,QAAQF,GAAIV,KAAKE,KAAMI,IAClC,CAACM,QAAS,KAGjB,IAAIC,EAAY,EAAM3F,IAAIyE,EAAMhC,cAAe,CAAC,QAAS,OAAQ,IAAK,YACtEoC,EAAQc,EAAUjG,OAAO3B,OAAO,CAAC6H,EAAWC,EAAOpP,KAC/C,IAAIqP,GAAYH,EAAUhG,QAAQlJ,EAAI,IAAM,IAAIgP,OAGhD,GAAiB,UAAbK,IAAyB,YAAShB,EAAKE,MAEvC,OADAe,EAAUF,EAAMJ,OAAQL,GACjBQ,EAGX,IAAII,EAAOD,EAAUF,EAAMJ,OAAQ,CAACP,KAAYC,IAASF,EAAOC,EAASC,IACzE,OAAKS,EAGEA,EAAU3H,OAAO,CAAC+H,OAAMF,aAFpB,CAAC,CAACE,OAAMF,SAAU,SAG9B,MAGP,OADA3O,OAAOC,eAAeyN,EAAO,OAAQ,CAACnN,MAAOoN,IACtCD,EAjaED,CAAWH,IACbK,KAAKmB,SAAW9O,OAAO8E,KAAK0I,EAAGG,KAAKC,MACvCJ,EAAGG,KAAKoB,SAAW/O,OAAO8E,KAAK0I,EAAGG,KAAKE,MACvCL,EAAGG,KAAKqB,yBAA2B,EAAW5B,EAAwBI,EAAGG,KAAKmB,UAC9EtB,EAAGG,KAAKsB,8BAAwCzB,EAAGG,KAAKqB,yBAAyBpI,OAAO,CAACsI,EAAOhC,IAASgC,EAAMpI,OAAO0G,EAAGG,KAAKC,KAAKV,IAAQ,IChCvInF,OAHM,CAACxH,EAAO4O,EAAOC,IACxBA,EAAK9L,QAAQ/C,KAAW4O,GDmCzB3B,EAAGG,KAAK0B,mBAAqB,EAAWlC,EAAkBK,EAAGG,KAAKmB,UAClEtB,EAAGG,KAAK2B,iBAAmB,EAAWtC,EAAmBQ,EAAGG,KAAKmB,UACjEtB,EAAGG,KAAK4B,2BAA6B,EAAWvC,EAAmBQ,EAAGG,KAAKmB,UAAU/G,OAAOmF,GEtCrF,cACd,OAAOvH,EAAIiB,OAAO,CAAC4I,EAAU9J,EAAKpG,IAAMkQ,GAAYvK,EAASS,EAAKpG,IAAI,GFqCqC,CAAKkO,EAAGG,KAAKC,KAAKV,GAAOuC,GAAUA,EAAO3D,SAAS,OACvJgB,EAAYQ,GAASE,GAGzB,IAAIkC,EACAC,EAAwB,IAAIC,EAAcC,IAAiBH,EAAaG,IAExEC,EAAsD,aAAtCtC,EAAGG,KAAKE,KAAK,qBAAsCjK,SAAkD,kBAAtC4J,EAAGG,KAAKE,KAAK,qBAA2CtC,EAAOwE,aAAexE,EAAOyE,aAQxK,GANIxC,EAAGG,KAAKqB,yBAAyBrN,QAIjCsO,EAA4B1E,EAAQ+B,EAAOoC,EAAYI,EAAetC,EAAGG,KAAKsB,+BAE9EzB,EAAGG,KAAK2B,iBAAiB3N,QAAU6L,EAAGG,KAAK0B,mBAAmB1N,SAAW2L,EAAqC,CAI9G,MAAM4C,EAAiCC,EAAsB5E,EAAQ+B,EAAOoC,IAExElC,EAAGG,KAAK0B,mBAAmB1N,QAAU6L,EAAGG,KAAK4B,2BAA2B5N,UAGnEuO,EAA+BE,EAAEC,mBAGlCH,EAA+BE,EAAEC,iBAAmBhD,EAAU9B,EAAOwE,aAAc,IACnFG,EAA+BE,EAAEC,iBAAiBC,iBAAiB,SAAU7J,IACzE8J,EAAahF,EAAQ9E,EAAE+J,OAAQN,EAAgC,oBAKjE1C,EAAGG,KAAKqB,yBAAyBrN,QAAUmO,IAAkBvE,EAAOwE,cAGtEE,EAA4B1E,EAAQ+B,EAAOoC,EAAYnE,EAAOwE,eAI1E,OAAOJ,EAUX,MAAMC,UAAsBa,YACxB,YAAYC,GACRC,QACA,IAAIC,EAAQ,GACZ5Q,OAAOC,eAAeiC,KAAM,OAAQ,CAAC/B,IAAK,IAAMyQ,IAYhDF,EAXmB,CAAClI,EAASqI,EAAMvD,KAG/B,IAAIwD,IAAWxD,GAAW,YAAasD,GAAYpI,IAAYoI,EAAMpI,SACrEqI,EAAKrI,QAAUA,EACfoI,EAAQC,EACJC,GACA5O,KAAK6O,cAAc,IAAIC,YAAY,SAAU,CAACR,OAAQK,OAMlE,kBAAoB,OAAO3O,KAAK2O,KAAKI,YACrC,qBAAuB,OAAO/O,KAAK2O,KAAKK,eACxC,oBAAsB,OAAOhP,KAAK2O,KAAKM,cACvC,cAAgB,OAAOjP,KAAK2O,KAAKrI,SAWrC,SAAS+H,EAAahF,EAAQsF,EAAMO,EAAUC,EAAMC,EAAQ,MAC3C,WAATD,EACAD,EAAShB,EAAES,KAAOA,EACF,kBAATQ,EACPD,EAAShB,EAAEC,iBAAmBQ,EACd,iBAATQ,IACPD,EAAShB,EAAES,KAAOA,EAAKU,mBACnBD,IAAU/F,EAAOwE,eACjBqB,EAAShB,EAAEC,iBAAmBQ,EAAKW,YAEvCJ,EAAShB,EAAEqB,iBAAmBZ,GAK7BtF,EAAOmG,aAGZ,YAAMN,EAAU,CAAC9D,EAAOqE,KAapB,GAAIA,EAAUhQ,OAAQ,CAClB,IAAI6G,EAsGhB,SAASoJ,EAAUC,EAAUhB,EAAMR,EAAkBoB,GACjD,GAAI,YAASI,GACT,OAAO,EAGX,GAAI,YAAUA,GAAW,CACrB,IAAIC,EAAU,GAKd,OAJA,YAAMD,EAAStD,QAAS,CAACF,EAAI0D,KACzB,IAAIxR,EAAQqR,EAAUG,EAAWlB,EAAMR,EAAkBoB,GACzDzR,OAAOC,eAAe6R,EAASzD,EAAI,CAAClO,IAAK,IAAMI,MAE5CuR,EAGX,OAAOD,EAASjL,OAAO,CAACkL,EAASE,KAC7BF,EAAQvK,OAA8B,OAArByK,EAAQrD,SACnBmD,EAAQvK,QAAUyK,EAAQnD,KAAKoD,KAAKpB,EAAMR,EAAkBoB,GAC5DK,EAAQvK,QAAUyK,EAAQnD,KAAKoD,KAAKpB,EAAMR,EAAkBoB,GAC3DK,GACR,CAACvK,QAAQ,IAAOA,OAzHGqK,CAAU9E,EAAYQ,GAAQ8D,EAAShB,EAAES,KAAMO,EAAShB,EAAEC,iBAAkBe,EAAShB,EAAEqB,kBACrGE,EAAU5M,QAAQmN,IACdA,EAASjN,SAASuD,EAAS4I,EAAShB,EAAES,KAAMvD,QAa5D,IAAI6E,EACJ,MAAMC,EAAwB,IAAIC,IAC5BlC,EAAwB,CAAC5E,EAAQ+B,EAAOrI,EAAW,QAChDkN,IACDA,EAA+B,IAAIG,eAAeC,IAC9CA,EAAQxN,QAAQyN,IACZjC,EAAaiC,EAAMjH,OAAQiH,EAAOJ,EAAsBjS,IAAIqS,EAAMjH,QAAS,eAIvF,IAAIkH,EAAiBL,EAAsBjS,IAAIoL,GAgB/C,OAfKkH,IACDA,EAAiB,GACjBzS,OAAOC,eAAewS,EAAgB,IAAK,CAAClS,MAAM,KAClD6R,EAAsBM,IAAInH,EAAQkH,GAClCN,EAA6BQ,QAAQpH,IAIrCtG,IACKwN,EAAenF,KAChBmF,EAAenF,GAAS,GACxBtN,OAAOC,eAAewS,EAAenF,GAAQ,IAAK,CAAC/M,MAAM,MAE7DkS,EAAenF,GAAO/H,KAAK,CAACN,cAEzBwN,GAULG,EAAsC,IAAIP,IAC1CpC,EAA8B,CAAC1E,EAAQ+B,EAAOrI,EAAW,KAAM4N,EAAO,KAAMC,EAAY,QAE1F,IAAIC,EAA8BH,EAAoCzS,IAAI0S,GAE1E,IAAKE,EAA6B,CAC9B,MAAMC,EAAwB,IAAIX,IAC5BY,EAAa,GACnB,IAAK,IAAI3T,EAAI,EAAGA,GAAK,IAAKA,IACtB2T,EAAW1N,KAAKyF,KAAKkI,MAAsC,KAA1B,IAAJ5T,EAAY6F,OAAOgO,UAAkB,KAEtEJ,EAA8B,CAC1BK,WAAYJ,EACZK,SAAU,IAAIC,qBAAqBf,IAC/BA,EAAQxN,QAAQyN,IACZjC,EAAaiC,EAAMjH,OAAQiH,EAAOQ,EAAsB7S,IAAIqS,EAAMjH,QAAS,eAAgBsH,MAEhG,CACCA,KAAMA,EACNC,UAAWG,KAGnBL,EAAoCF,IAAIG,EAAME,GAGlD,IAAIQ,EAAuBR,EAA4BK,WAAWjT,IAAIoL,GAgBtE,OAfKgI,IACDR,EAA4BM,SAASV,QAAQpH,GAC7CgI,EAAuB,GACvBvT,OAAOC,eAAesT,EAAsB,IAAK,CAAChT,MAAM,KACxDwS,EAA4BK,WAAWV,IAAInH,EAAQgI,IAInDtO,IACKsO,EAAqBjG,KACtBiG,EAAqBjG,GAAS,GAC9BtN,OAAOC,eAAesT,EAAqBjG,GAAQ,IAAK,CAAC/M,MAAM,MAEnEgT,EAAqBjG,GAAO/H,KAAK,CAACN,WAAU6N,eAEzCS,GAgCX,SAASC,EAASC,EAAW9E,EAAU+E,EAAW7C,EAAMR,EAAkBoB,GAElE,IAaAlK,EAdA6F,EAAuBuG,SAASF,IAEhCC,EAAYE,EAAQF,EADCD,EAAU1I,WAAW,iBAAmB,EAAO0I,EAAW,iBAAmBA,EACnDhC,EAAiBF,oBAChEkC,EAkGR,SAA0BvG,EAAMuE,GAC5B,GAAIvE,EAAKnC,WAAW,iBAAkB,CAElC,GADAmC,EAAO,EAAOA,EAAM,iBAChB,CAAC,QAAS,UAAUyG,SAASzG,GAC7B,OAAOuE,EAAiBA,iBAAiBvE,GAE7C,IAAI2G,EAAW,CAACC,IAAK,SAAUC,OAAQ,MAAOC,KAAM,QAASC,MAAO,QACpE,MAAI,CAAC,MAAO,QAAQN,SAASzG,GAClBuE,EAAiBD,WAAWqC,EAAS3G,IAASuE,EAAiBF,mBAAmBrE,GAEtFuE,EAAiBF,mBAAmBrE,GAAQuE,EAAiBD,WAAWqC,EAAS3G,IAE5F,OAAOuE,EAAiB,EAASvE,IA9GjBgH,CAAiBT,EAAWhC,KAExCiC,EAAYE,EAAQF,EAAWD,EAAWpD,GAEtCoD,EADAzG,EAAkB2G,SAASF,GACfU,EAASV,EAAW5C,GACzB1D,EAAiBwG,SAASF,GAsF7C,SAA4BvG,EAAM2D,EAAMR,GACpC,GAAI,CAAC,MAAO,QAAQsD,SAASzG,GACzB,OAAOiH,EAASjH,EAAM2D,GAAQsD,EAASjH,EAAMmD,GAEjD,OAAO8D,EAASjH,EAAMmD,GAAoB8D,EAASjH,EAAM2D,GAzFrCuD,CAAmBX,EAAW5C,EAAMR,GAEpC8D,EAAS,EAASV,GAAY5C,IAIlD,OAAOlC,GACH,IAAK,UACDpH,KAAUkM,GAAaC,IAAgBD,IAAcC,GACzD,MACA,IAAK,KACDnM,EAASkM,GAAaC,EAC1B,MACA,IAAK,KACDnM,EAASkM,GAAaC,EAC1B,MACA,IAAK,IACDnM,EAASkM,EAAYC,EACzB,MACA,IAAK,IACDnM,EAASkM,EAAYC,EACzB,MACA,QACInM,EAASkM,IAAcC,EAE/B,OAAOnM,EAGX,SAASqM,EAAQpS,EAAK0L,EAAMmH,GACxB,GAAI,EAAW7S,GACX,OAAOA,EAEX,GAAI,YAAWA,GACX,OAAO0D,WAAW1D,GAGtB,GAAIA,EAAIsK,SAAS,KAAM,CACnB,IAAIwI,EAAO9S,EAAIiJ,QAAQ,GAiBvB,OAhBAjJ,EAAM0D,WAAW1D,EAAIiJ,OAAO,EAAGjJ,EAAIG,OAAS,KAgB9B,KAdV,CAAC,QAAS,UAAUgS,SAASzG,IAASA,EAAKpB,SAAS,WAAaoB,EAAKpB,SAAS,WAChEqI,EAASjH,EAAMmH,GACvB,CAAC,OAAQ,SAASV,SAASzG,IAASA,EAAKpB,SAAS,UAAYoB,EAAKpB,SAAS,UACpEqI,EAAS,QAASE,GAC1B,CAAC,MAAO,UAAUV,SAASzG,IAASA,EAAKpB,SAAS,SAAWoB,EAAKpB,SAAS,WACnEqI,EAAS,SAAUE,IAElCnH,EAAO,EAASA,MACJmH,EACOA,EAAuBnH,GAEvB,GAMvBoH,EAAO9S,EAAIiJ,QAAQ,GAEvB,OADAjJ,EAAM0D,WAAW1D,EAAIiJ,OAAO,EAAGjJ,EAAIG,OAAS,IACrC2S,GACH,IAAK,KACL,MACA,QACI,MAAM,IAAIlS,MAAM,iBAAmBkS,EAAO,iCAElD,OAAO9S,EAGX,SAAS2S,EAASjH,EAAM2D,GAIpB,IAAI0D,EAHJ,GAAK1D,EAcL,MAVI,CAAC,cAAe,gBAAgB8C,SAASzG,IAAS2D,EAAKK,gBACvDhE,EAAgB,gBAATA,EAAyB,aAAe,YAC/CqH,EAAa1D,EAAKK,eAAe,IAC1B,CAAC,cAAe,eAAgB,QAAS,UAAUyC,SAASzG,IAAS2D,EAAKM,eACjFjE,EAAgB,gBAATA,GAAmC,UAATA,EAAmB,aAAe,YACnEqH,EAAa1D,EAAKM,cAAc,KAEhCjE,EAAOA,EAAKnC,WAAW,WAAamC,EAAKnC,WAAW,UAAYmC,EAAKzC,OAAO,EAAG,GAAKyC,EACpFqH,EAAa1D,EAAKI,aAAeJ,GAE9B0D,EAAWrH,GAiFtB,SAAS0B,EAAUC,EAAM2F,GACrB,IAAIC,GAAS,GACT,EAAS5F,EAAM,IAAK,MAAQ,EAASA,EAAM,OAAQ,QAC/C,EAASA,EAAM,OAAQ,MACvB4F,GAAS,EACT5F,EAAO,EAAQA,EAAM,OAAQ,MAE7BA,EAAO,EAAQA,EAAM,IAAK,MAGlC,IAAIL,EAAY,EAAM3F,IAAIgG,EAAM,CAAC,IAAK,KAAM,IAAK,KAAM,MACnD6F,EAAYlG,EAAUjG,OAAO0E,IAAIxG,GAAKA,EAAE6H,QAE5C,GAAIoG,EAAU/S,OAAS,EAAG,CACtB,IAAIgT,EAAcD,EAAU,GACxBjB,EAAYiB,EAAU,GACtBE,EAAcF,EAAU,GAI5B,OAFAF,EAAaf,EAAWkB,EAAaC,GAE9B,CACHH,SACAhB,YACAC,UAAW,CAAC,CACRmB,QAASF,EAEThG,SAAUH,EAAUhG,QAAQ,GAAGuC,WAAW,KAAO,IAAM,EAAOyD,EAAUhG,QAAQ,GAAI,KAC7EgG,EAAUhG,QAAQ,GAAGuC,WAAW,KAAO,IAAM,EAAOyD,EAAUhG,QAAQ,GAAI,KAAOgG,EAAUhG,QAAQ,IAC3G,CACCqM,QAASD,EACTjG,SAAUH,EAAUhG,QAAQ,KAGhC,KAAKqI,EAAMR,EAAkBoB,GACzB,OAAOvP,KAAKwR,UAAU9M,OAClB,CAACkO,EAAMC,IAASD,GAAQtB,EAAStR,KAAKuR,UAAWsB,EAAKpG,SAAUoG,EAAKF,QAAShE,EAAMR,EAAkBoB,IAAmB,KACvHvP,KAAKuS,SAKvB,GAAIC,EAAU/S,OAAS,EAAG,CACtB,MAAMqQ,EAAU,CACZyC,SACA,KAAK5D,EAAMR,EAAkBoB,GACzB,OAAO+B,EAAStR,KAAKuR,UAAWvR,KAAKyM,SAAUzM,KAAKwR,UAAW7C,EAAMR,EAAkBoB,KAAsBvP,KAAKuS,SAmB1H,OAhBAzC,EAAQyB,UAAYiB,EAAU,GAC9B1C,EAAQ0B,UAAYgB,EAAU,GAC9B1C,EAAQrD,SAAWH,EAAUhG,QAAQ,GACZ,MAArBwJ,EAAQrD,WACRqD,EAAQrD,SAAW,IACfqD,EAAQyB,UAAU1I,WAAW,SAC7BiH,EAAQrD,SAAW,KACnBqD,EAAQyB,UAAY,EAAOzB,EAAQyB,UAAW,SACvCzB,EAAQyB,UAAU1I,WAAW,UACpCiH,EAAQrD,SAAW,KACnBqD,EAAQyB,UAAY,EAAOzB,EAAQyB,UAAW,UAItDe,EAAaxC,EAAQyB,UAAWzB,EAAQ0B,WAEjC1B,EAIX,OADAwC,EAAa3F,GAAM,GACZ,CACH4F,SACA5F,KAAMA,EACN,KAAKgC,EAAMR,EAAkBoB,GACzB,OAAO+B,EAAStR,KAAK2M,KAAM,WAAW,EAAMgC,EAAMR,EAAkBoB,KAAsBvP,KAAKuS,SGvgB5F,sCACX,IAAKO,EACD,OAAOC,MAAMC,EAAKhN,GAEtB,MAAMiN,EAAuB,CAACC,EAAOC,EAAUC,KAC3C,IAAIC,EAAyBP,EAAiBI,EAAOC,EAAUC,GAC/D,OAAOE,EAA2BD,EAAyB,MAE/D,OAAO,IAAIE,QAAQC,MAAOC,EAASC,KAC/B,IAAIC,EACJ,IACIA,QAAiBZ,MAAMC,EAAKhN,GAC9B,MAAMzB,GACJ,OAAOmP,EAAOnP,GAGlB,IAII2H,EAJA0H,IAAmBD,EAASE,QAAQ5V,IAAI,mBAAqB6V,KAC7DC,EAAiB,EACjBC,EAASL,EAASM,KAAKC,YACvBC,EAAS,GAGb,UADMlB,EAAqB,WAAY,EAAGW,IACnC1H,QAAc8H,EAAOI,UAAYlI,EAAMmI,MAC1CF,EAAO9Q,KAAK6I,EAAM7N,OAClB0V,GAAkB7H,EAAM7N,MAAMoB,aACxBwT,EAAqB,WAAYc,GAAiBH,GAAiB1H,EAAMmI,KAAON,EAAiBH,GAG3G,MAAMU,EAAY,CACdC,UAAU,EACVvB,IAAKW,EAASX,IACdwB,GAAIb,EAASa,GACbX,QAASF,EAASE,QAClBY,WAAYd,EAASc,WACrBC,WAAYf,EAASe,WACrBC,OAAQhB,EAASgB,OACjBxF,KAAMwE,EAASxE,KACfyF,KAAI,IACO,IAAIrB,QAAQE,IACf,IAAIoB,EAAO,IAAIC,WAAWf,GAC1BI,EAAOzP,OAAO,CAACqQ,EAAU7I,KACrB2I,EAAKrE,IAAItE,EAAO6I,GACTA,EAAW7I,EAAMzM,QACzB,GACHgU,EAAQ,IAAKuB,YAAY,SAAUC,OAAOJ,MAGlD,OACI,OAAO7U,KAAK4U,OAAOM,KAAKN,GAAQO,KAAK3J,MAAMoJ,KAE/CQ,KAAI,IACO7B,QAAQE,QAAQ,IAAI4B,KAAKlB,KAGxCV,EAAQa,OCrDD,WACX,MAAMlU,EAAS,IAAK7C,KAAKyC,MACzB,OAAII,EAAOkV,OAGXlV,EAAOkV,KAAO,GACdlV,EAAOkV,KAAKnK,UAAYA,EACxB/K,EAAOkV,KAAKvC,MAAQ,GAJT3S,ICXV7C,KAAK0C","file":"apis.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport {\r\n    getName as getVendorName,\r\n    getPrefix as getVendorPrefix\r\n} from './vendor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Centralized ENV initializer\r\n * for actual and virtual browser environments.\r\n * ---------------------------\r\n */\r\n\r\nexport default function() {\r\n    if (!(_isObject(this) && this.window) && (typeof window === 'undefined')) {\r\n        throw new Error('A window context is required.');\r\n    }\r\n    const _window = _isObject(this) && this.window ? this.window : window;\r\n    // Create global scope?\r\n    if (!_window.WebQit) {\r\n        _window.WebQit = {};\r\n        // Is this params for global or sub scope?\r\n        let _vendor, _prefix;\r\n        Object.defineProperty(_window.WebQit, 'window', {get: () => _window});\r\n        Object.defineProperty(_window.WebQit, 'vendor', {value: {\r\n            getName: () => {\r\n                if (!_vendor) {\r\n                    _vendor = getVendorName(_window);\r\n                }\r\n                return _vendor;\r\n            },\r\n            getPrefix: () => {\r\n                if (!_prefix) {\r\n                    _prefix = getVendorPrefix(_window);\r\n                }\r\n                return _prefix;\r\n            }\r\n        }});\r\n    }\r\n    return _window.WebQit;\r\n }","\r\n/**\r\n * Detects vendor type from the given window object\r\n * \r\n * @param window    window\r\n *\r\n * @return string\r\n */\r\nexport function getName(window) {\r\n    // Firefox 1.0+\r\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n    if (isFirefox) {\r\n        return 'firefox';\r\n    }\r\n    // Safari 3.0+ \"[object HTMLElementConstructor]\" \r\n    var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof window.safari !== 'undefined' && window.safari.pushNotification));\r\n    if (isSafari) {\r\n        return 'safari';\r\n    }\r\n    // Chrome 1 - 79\r\n    var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\r\n    // Edge (based on chromium) detection\r\n    var isEdgeChromium = isChrome && (window.navigator.userAgent.indexOf(\"Edg\") != -1);\r\n    // Opera 8.0+\r\n    var isOpera = (!!window.opr && !!window.opr.addons) || !!window.opera || window.navigator.userAgent.indexOf(' OPR/') >= 0;\r\n\r\n    // Internet Explorer 6-11\r\n    var isIE = /*@cc_on!@*/false || !!window.document.documentMode;\r\n    // Edge 20+\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    // Blink engine detection\r\n    var isBlink = (isChrome || isOpera) && !!window.CSS;\r\n    return isEdge ? 'edge' : (\r\n        isIE ? 'ie' : (\r\n            isOpera ? 'opera' : (\r\n                isEdgeChromium ? 'ie-chromium' : (\r\n                    isChrome ? 'chrome' : 'unknown'\r\n                )\r\n            )\r\n        )\r\n    );\r\n};\r\n\r\n/**\r\n * Returns the vendor-specific property prefix.\r\n *\r\n * @return object\r\n */\r\nexport function getPrefix(window) {\r\n    var styles = window.getComputedStyle(window.document.documentElement, '');\r\n    var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.Olink === '' && ['', 'o'])[1];\r\n    var api = (('WebKit|Moz|Ms|O').match(new RegExp('(' + prefix + ')', 'i')) || [])[1];\r\n    return {\r\n        api,\r\n        prefix,\r\n        css: '-' + prefix + '-',\r\n    };\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _toTitle from './toTitle.js';\r\n\r\n/**\r\n * Makes a string camel-cased.\r\n *\r\n * @param string \tstr\r\n * @param bool\t \tfromStart\r\n *\r\n * @return string\r\n */\r\nexport default function(str, fromStart) {\r\n\t// Make disting words\r\n\tstr = _toTitle(str.replace(/-/g, ' ')).replace(/ /g, '');\r\n\treturn fromStart ? str : str[0].toLowerCase() + str.substr(1);\r\n};\r\n","\r\n/**\r\n * Converts a string to title case.\r\n *\r\n * @param string \tstr\r\n * @param bool \t\tstrict\r\n *\r\n * @return string\r\n */\r\nexport default function(str, strict) {\r\n\tif (typeof str !== 'string') {\r\n\t\treturn str;\r\n\t}\r\n\treturn str.replace(/\\w\\S*/g,  function(txt) { return txt.charAt(0).toUpperCase() + ((typeof strict !== undefined && strict) ? txt.substr(1).toLowerCase() : txt.substr(1)); })\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _isBoolean from '@webqit/util/js/isBoolean.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _toCamel from '@webqit/util/str/toCamel.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport _any from '@webqit/util/arr/any.js';\r\n\r\n/**\r\n * @consts\r\n */\r\n\r\nconst parserCache = {};\r\nconst sizeProperties = ['width', 'height',];\r\nconst sizePropertiesAll = sizeProperties.concat(sizeProperties.map(prop => 'inner-' + prop), sizeProperties.map(prop => 'outer-' + prop));\r\nconst offsetProperties = ['top', 'left', 'right', 'bottom',];\r\nconst intersectionProperties = sizeProperties.map(prop => 'intersection-' + prop).concat(offsetProperties.map(prop => 'intersection-' + prop));\r\n        \r\n/**\r\n * ---------------------------\r\n * The Observable media query\r\n * ---------------------------\r\n *\r\n * This is a Container Query implementation.\r\n * Delivered as an observable.\r\n */\r\n\r\nexport default function matchRect(target, query, now = false) {\r\n    var PQ = parserCache[query];\r\n    if (!PQ) {\r\n        PQ = parseQuery(query);\r\n        PQ.meta.varNames = Object.keys(PQ.meta.vars);\r\n        PQ.meta.argNames = Object.keys(PQ.meta.args);\r\n        PQ.meta.matchedIntersectionProps = _intersect(intersectionProperties, PQ.meta.varNames);\r\n        PQ.meta.matchedIntersectionThresholds = _unique(PQ.meta.matchedIntersectionProps.reduce((total, prop) => total.concat(PQ.meta.vars[prop]), []));\r\n        PQ.meta.matchedOffsetProps = _intersect(offsetProperties, PQ.meta.varNames);\r\n        PQ.meta.matchedSizeProps = _intersect(sizePropertiesAll, PQ.meta.varNames);\r\n        PQ.meta.matchedPercentageSizeProps = _intersect(sizePropertiesAll, PQ.meta.varNames).filter(prop => _any(PQ.meta.vars[prop], CSSVal => CSSVal.endsWith('%')));\r\n        parserCache[query] = PQ;\r\n    }\r\n    // ----------\r\n    var dispatcher,\r\n        RectQueryListInstance = new RectQueryList(_dispatcher => { dispatcher = _dispatcher; });\r\n    // ----------\r\n    var intersectRoot = PQ.meta.args['intersection-root'] === 'document' ? document : (PQ.meta.args['intersection-root'] === 'offset-parent' ? target.offsetParent : target.scrollParent);\r\n    // ----------\r\n    if (PQ.meta.matchedIntersectionProps.length) {\r\n        // Observe intersection for target with given root\r\n        // IntersectionObserverFactory() will maintain only one instance of IntersectionObserver\r\n        // for \"intersectRoot\", globally. \"target\" will only be observed on an existing instance.\r\n        IntersectionObserverFactory(target, query, dispatcher, intersectRoot, PQ.meta.matchedIntersectionThresholds);\r\n    }\r\n    if (PQ.meta.matchedSizeProps.length || PQ.meta.matchedOffsetProps.length || !query/* @see: [on-parent-resize] */) {\r\n        // Observe target's resize\r\n        // ResizeObserverFactory() will maintain only one instance of ResizeObserver\r\n        // for \"target\", globally. \"dispatcher\" will only be added on an existing instance.\r\n        const resizeObserversObjectForTarget = ResizeObserverFactory(target, query, dispatcher);\r\n        // Observe offsetParent's resize?\r\n        if (PQ.meta.matchedOffsetProps.length || PQ.meta.matchedPercentageSizeProps.length) {\r\n            // If @previous-query isn't already observing its offsetParent\r\n            // so that resizeObserversObjectForTarget isn't iterated twice on one parent-resize event\r\n            if (!resizeObserversObjectForTarget.$.offsetParentRect) {\r\n                // matchRect() will maintain only instance of ResizeObserver\r\n                // for \"offsetParent\", globally. This matchRect() will only hook up on an existing instance.\r\n                resizeObserversObjectForTarget.$.offsetParentRect = matchRect(target.offsetParent, ''); // @ref: [on-parent-resize]\r\n                resizeObserversObjectForTarget.$.offsetParentRect.addEventListener('change', e => {\r\n                    handleChange(target, e.detail, resizeObserversObjectForTarget, 'parent-resize');\r\n                });\r\n            }\r\n            // if @hasIntersectionQueries isn't already just observing offsetParent\r\n            // so that dispatcher isn't called twice on one intersection event\r\n            if (!(PQ.meta.matchedIntersectionProps.length && intersectRoot === target.offsetParent)) {\r\n                // IntersectionObserverFactory() will maintain only one instance of IntersectionObserver\r\n                // for \"offsetParent\" pair, globally. \"dispatcher\" will only be added on an existing instance.\r\n                IntersectionObserverFactory(target, query, dispatcher, target.offsetParent);\r\n            }\r\n        }\r\n    }\r\n    return RectQueryListInstance;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * This is our custom event target that\r\n * delivers live values.\r\n * ------------------\r\n */\r\n\r\nclass RectQueryList extends EventTarget {\r\n    constructor(initCallback) {\r\n        super();\r\n        var _rect = {};\r\n        Object.defineProperty(this, 'rect', {get: () => _rect});\r\n        const dispatcher = (matches, rect, query) => {\r\n            // -----------\r\n            // Note the order...\r\n            var changed = !query || !('matches' in _rect) || !(matches === _rect.matches);\r\n            rect.matches = matches;\r\n            _rect = rect;\r\n            if (changed) {\r\n                this.dispatchEvent(new CustomEvent('change', {detail: rect}));\r\n            }\r\n            // -----------\r\n        };\r\n        initCallback(dispatcher);\r\n    }\r\n    get contentRect() { return this.rect.contentRect; }\r\n    get contentBoxSize() { return this.rect.contentBoxSize; }\r\n    get borderBoxSize() { return this.rect.borderBoxSize; }\r\n    get matches() { return this.rect.matches; }\r\n}\r\n\r\n/**\r\n * ------------------\r\n * This change handler is called \r\n * from the various codes observing\r\n * property changes\r\n * ------------------\r\n */\r\n\r\nfunction handleChange(target, rect, registry, type, _root = null) {\r\n    if (type === 'resize') {\r\n        registry.$.rect = rect;\r\n    } else if (type === 'parent-resize') {\r\n        registry.$.offsetParentRect = rect;\r\n    } else if (type === 'intersection') {\r\n        registry.$.rect = rect.boundingClientRect;\r\n        if (_root === target.offsetParent) {\r\n            registry.$.offsetParentRect = rect.rootBounds;\r\n        }\r\n        registry.$.intersectionRect = rect;\r\n    }\r\n    // Note that some conditions above can be true\r\n    // even if target.isConnected is false. So this is\r\n    // place to return.\r\n    if (!target.isConnected) {\r\n        return;\r\n    }\r\n    _each(registry, (query, observers) => {\r\n        // First filter out by thresholds\r\n        if (type === 'intersection') {\r\n            /** TODO\r\n            observers = observers.filter(observer => {\r\n                if (observer.threshold && !observer.threshold.includes(rect.intersectionRatio)) {\r\n                    console.log(observer.threshold, rect.intersectionRatio);\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            */\r\n        }\r\n        if (observers.length) {\r\n            var matches = evalQuery(parserCache[query], registry.$.rect, registry.$.offsetParentRect, registry.$.intersectionRect);\r\n            observers.forEach(observer => {\r\n                observer.callback(matches, registry.$.rect, query);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * ------------------\r\n * We use one ResizeObserver instance for\r\n * all case, and only when needed.\r\n * ------------------\r\n */\r\n\r\nvar GlobalResizeObserverInstance;\r\nconst GlobalResizeCallbacks = new Map();\r\nconst ResizeObserverFactory = (target, query, callback = null) => {\r\n    if (!GlobalResizeObserverInstance) {\r\n        GlobalResizeObserverInstance = new ResizeObserver(entries => {\r\n            entries.forEach(entry => {\r\n                handleChange(entry.target, entry, GlobalResizeCallbacks.get(entry.target), 'resize');\r\n            });\r\n        });\r\n    }\r\n    var resizeRegistry = GlobalResizeCallbacks.get(target);\r\n    if (!resizeRegistry) {\r\n        resizeRegistry = {};\r\n        Object.defineProperty(resizeRegistry, '$', {value:{}});\r\n        GlobalResizeCallbacks.set(target, resizeRegistry);\r\n        GlobalResizeObserverInstance.observe(target);\r\n    }\r\n    // Add to resizeRegistry\r\n    // or get resizeRegistry?\r\n    if (callback) {\r\n        if (!resizeRegistry[query]) {\r\n            resizeRegistry[query] = [];\r\n            Object.defineProperty(resizeRegistry[query], '$', {value:{}});\r\n        }\r\n        resizeRegistry[query].push({callback});\r\n    }\r\n    return resizeRegistry;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * We use one IntersectionObserver instance for\r\n * all cases of a root, and only when needed.\r\n * ------------------\r\n */\r\n\r\nconst GlobalIntersectionObserverInstances = new Map();\r\nconst IntersectionObserverFactory = (target, query, callback = null, root = null, threshold = null) => {\r\n    // ---------------------\r\n    var intersectionObserverForRoot = GlobalIntersectionObserverInstances.get(root);\r\n    // ---------------------\r\n    if (!intersectionObserverForRoot) {\r\n        const _intersectionRegistry = new Map();\r\n        const _threshold = [];\r\n        for (var i = 0; i <= 100; i ++) {\r\n            _threshold.push(Math.round(((i * 0.01) + Number.EPSILON) * 100) / 100);\r\n        }\r\n        intersectionObserverForRoot = {\r\n            registries: _intersectionRegistry,\r\n            instance: new IntersectionObserver(entries => {\r\n                entries.forEach(entry => {\r\n                    handleChange(entry.target, entry, _intersectionRegistry.get(entry.target), 'intersection', root);\r\n                });\r\n            }, {\r\n                root: root,\r\n                threshold: _threshold,\r\n            }),\r\n        };\r\n        GlobalIntersectionObserverInstances.set(root, intersectionObserverForRoot);\r\n    }\r\n    // ---------------------\r\n    var intersectionRegistry = intersectionObserverForRoot.registries.get(target);\r\n    if (!intersectionRegistry) {\r\n        intersectionObserverForRoot.instance.observe(target);\r\n        intersectionRegistry = {};\r\n        Object.defineProperty(intersectionRegistry, '$', {value:{}});\r\n        intersectionObserverForRoot.registries.set(target, intersectionRegistry);\r\n    }\r\n    // Add to intersectionRegistry\r\n    // or get intersectionRegistry?\r\n    if (callback) {\r\n        if (!intersectionRegistry[query]) {\r\n            intersectionRegistry[query] = [];\r\n            Object.defineProperty(intersectionRegistry[query], '$', {value:{}});\r\n        }\r\n        intersectionRegistry[query].push({callback, threshold});\r\n    }\r\n    return intersectionRegistry;\r\n};\r\n\r\n/**\r\n * ------------------\r\n * This is our eval() set\r\n * of functions.\r\n * ------------------\r\n */\r\n\r\nfunction evalQuery(queryObj, rect, offsetParentRect, intersectionRect) {\r\n    if (_isEmpty(queryObj)) {\r\n        return true;\r\n    }\r\n    // --------------\r\n    if (_isObject(queryObj)) {\r\n        var evalObj = {};\r\n        _each(queryObj.queries, (id, _queryObj) => {\r\n            var value = evalQuery(_queryObj, rect, offsetParentRect, intersectionRect);\r\n            Object.defineProperty(evalObj, id, {get: () => value});\r\n        });\r\n        return evalObj;\r\n    }\r\n    // --------------\r\n    return queryObj.reduce((evalObj, exprObj) => {\r\n        evalObj.result = exprObj.operator === 'or'\r\n            ? evalObj.result || exprObj.expr.eval(rect, offsetParentRect, intersectionRect) \r\n            : evalObj.result && exprObj.expr.eval(rect, offsetParentRect, intersectionRect);\r\n        return evalObj;\r\n    }, {result: true}).result;\r\n}\r\n// ---------------\r\nfunction evalExpr(operand_a, operator, operand_b, rect, offsetParentRect, intersectionRect) {\r\n    if (intersectionProperties.includes(operand_a)) {\r\n        var contextualProp = operand_a.startsWith('intersection-') ? _after(operand_a, 'intersection-') : operand_a;\r\n        operand_b = readVal(operand_b, contextualProp, intersectionRect.boundingClientRect/* percentages scope */);\r\n        operand_a = readIntersection(operand_a, intersectionRect);\r\n    } else {\r\n        operand_b = readVal(operand_b, operand_a, offsetParentRect/* percentages scope */);\r\n        if (sizePropertiesAll.includes(operand_a)) {\r\n            operand_a = readRect(operand_a, rect);\r\n        } else if (offsetProperties.includes(operand_a)) {\r\n            operand_a = readRelativeOffset(operand_a, rect, offsetParentRect);\r\n        } else {\r\n            operand_a = readRect(_toCamel(operand_a), rect);\r\n        }\r\n    }\r\n    var result;\r\n    switch(operator) {\r\n        case 'boolish':\r\n            result = (operand_a && operand_b) || (!operand_a && !operand_b) ? true : false;\r\n        break;\r\n        case '<=':\r\n            result = operand_a <= operand_b;\r\n        break;\r\n        case '>=':\r\n            result = operand_a >= operand_b;\r\n        break;\r\n        case '<':\r\n            result = operand_a < operand_b;\r\n        break;\r\n        case '>':\r\n            result = operand_a > operand_b;\r\n        break;\r\n        default:\r\n            result = operand_a === operand_b;\r\n    }\r\n    return result;\r\n}\r\n// ----------------\r\nfunction readVal(val, prop, percentagesContextRect) {\r\n    if (_isBoolean(val)) {\r\n        return val;\r\n    }\r\n    if (_isNumeric(val)) {\r\n        return parseFloat(val);\r\n    }\r\n    // ------------\r\n    if (val.endsWith('%')) {\r\n        var unit = val.substr(-1);\r\n        val = parseFloat(val.substr(0, val.length - 1));\r\n        var containerVal;\r\n        if (['width', 'height'].includes(prop) || prop.endsWith('-width') || prop.endsWith('-height')) {\r\n            containerVal = readRect(prop, percentagesContextRect);\r\n        } else if (['left', 'right'].includes(prop) || prop.endsWith('-left') || prop.endsWith('-right')) {\r\n            containerVal = readRect('width', percentagesContextRect);\r\n        } else if (['top', 'bottom'].includes(prop) || prop.endsWith('-top') || prop.endsWith('-bottom')) {\r\n            containerVal = readRect('height', percentagesContextRect);\r\n        } else {         \r\n            prop = _toCamel(prop);\r\n            if (prop in percentagesContextRect) {\r\n                containerVal = percentagesContextRect[prop];\r\n            } else {\r\n                containerVal = 1;\r\n            }\r\n        }\r\n        return (val / 100) * containerVal;\r\n    }\r\n    // ------------\r\n    var unit = val.substr(-2);\r\n    val = parseFloat(val.substr(0, val.length - 2));\r\n    switch(unit) {\r\n        case 'px':\r\n        break;\r\n        default:\r\n            throw new Error('The CSS unit \"' + unit + '\" is not currently supported.');\r\n    }\r\n    return val;\r\n}\r\n// -----------------\r\nfunction readRect(prop, rect) {\r\n    if (!rect) {\r\n        return;\r\n    }\r\n    var rectObject;\r\n    if (['inner-width', 'inner-height'].includes(prop) && rect.contentBoxSize) {\r\n        prop = prop === 'inner-width' ? 'inlineSize' : 'blockSize';\r\n        rectObject = rect.contentBoxSize[0];\r\n    } else if (['outer-width', 'outer-height', 'width', 'height'].includes(prop) && rect.borderBoxSize) {\r\n        prop = prop === 'outer-width' || prop === 'width' ? 'inlineSize' : 'blockSize';\r\n        rectObject = rect.borderBoxSize[0];\r\n    } else {\r\n        prop = prop.startsWith('outer-') || prop.startsWith('inner-') ? prop.substr(0, 6) : prop;\r\n        rectObject = rect.contentRect || rect;\r\n    }\r\n    return rectObject[prop];\r\n}\r\nfunction readRelativeOffset(prop, rect, offsetParentRect) {\r\n    if (['top', 'left'].includes(prop)) {\r\n        return readRect(prop, rect) - readRect(prop, offsetParentRect);\r\n    }\r\n    return readRect(prop, offsetParentRect) - readRect(prop, rect);\r\n}\r\n// ------------------\r\nfunction readIntersection(prop, intersectionRect) {\r\n    if (prop.startsWith('intersection-')) {\r\n        prop = _after(prop, 'intersection-');\r\n        if (['width', 'height'].includes(prop)) {\r\n            return intersectionRect.intersectionRect[prop];\r\n        }\r\n        var inverses = {top: 'bottom', bottom: 'top', left: 'right', right: 'left'}\r\n        if (['top', 'left'].includes(prop)) {\r\n            return intersectionRect.rootBounds[inverses[prop]] - intersectionRect.boundingClientRect[prop];\r\n        }\r\n        return intersectionRect.boundingClientRect[prop] - intersectionRect.rootBounds[inverses[prop]];\r\n    }\r\n    return intersectionRect[_toCamel(prop)];\r\n}\r\n// ------------------\r\n\r\n/**\r\n * ------------------\r\n * This is our parse() set\r\n * of functions.\r\n * ------------------\r\n */\r\n\r\nfunction parseQuery(query) {\r\n    // --------------------\r\n    var parse = [], meta = {vars: {}, args: {}};\r\n    var addVar = (varName, vals) => {\r\n        if (!meta.vars[varName]) {\r\n            meta.vars[varName] = [];\r\n        }\r\n        meta.vars[varName].push(...vals);\r\n    };\r\n    var addArg = (argName, val) => {\r\n        if (argName in meta.args) {\r\n            throw new Error('An argument may be set only once in a query. Duplicate: ' + argName);\r\n        }\r\n        meta.args[argName] = val;\r\n    };\r\n    // --------------------\r\n    if (query) {\r\n        // ---------------\r\n        if (_wrapped(query, '{', '}')) {\r\n            return Lexer.split(_unwrap(query, '{', '}'), [';']).reduce((obj, chunk) => {\r\n                var [ id, query ] = Lexer.split(chunk, [':']).map(s => s.trim());\r\n                obj.queries[id] = parseQuery(query);\r\n                // -----\r\n                _each(obj.queries[id].meta.vars, addVar);\r\n                _each(obj.queries[id].meta.args, addArg);\r\n            }, {queries: {}});\r\n        }\r\n        // ---------------\r\n        var exprParse = Lexer.lex(query.toLowerCase(), [' and ', ' or ', ',', ' using ']);\r\n        parse = exprParse.tokens.reduce((_exprList, _expr, i) => {\r\n            var operator = (exprParse.matches[i - 1] || '').trim();\r\n            // ------------\r\n            // Are we in args phase\r\n            if (operator === 'using' || !_isEmpty(meta.args)) {\r\n                parseExpr(_expr.trim(), addArg);\r\n                return _exprList;\r\n            }\r\n            // ------------\r\n            var expr = parseExpr(_expr.trim(), (varName, ...vals) => addVar(varName, vals));\r\n            if (!_exprList) {\r\n                return [{expr, operator: 'and',}];\r\n            }\r\n            return _exprList.concat({expr, operator});\r\n        }, null);\r\n    }\r\n    Object.defineProperty(parse, 'meta', {value: meta});\r\n    return parse;\r\n}\r\n// ---------------\r\nfunction parseExpr(expr, varsCallback) {\r\n    var truthy = true;\r\n    if (_wrapped(expr, '(', ')') || _wrapped(expr, 'not(', ')')) {\r\n        if (_wrapped(expr, 'not(', ')')) {\r\n            truthy = false;\r\n            expr = _unwrap(expr, 'not(', ')');\r\n        } else {\r\n            expr = _unwrap(expr, '(', ')');\r\n        }\r\n    }\r\n    var exprParse = Lexer.lex(expr, [':', '<=', '<', '>=', '>']);\r\n    var exprSplit = exprParse.tokens.map(e => e.trim());\r\n    // (operand_b_1 <= operand_a <= operand_b_2)\r\n    if (exprSplit.length > 2) {\r\n        var operand_b_1 = exprSplit[0],\r\n            operand_a = exprSplit[1],\r\n            operand_b_2 = exprSplit[2];\r\n        // ---------------\r\n        varsCallback(operand_a, operand_b_1, operand_b_2);\r\n        // ---------------\r\n        return {\r\n            truthy,\r\n            operand_a,\r\n            operand_b: [{\r\n                operand: operand_b_1,\r\n                // Reverse operator\r\n                operator: exprParse.matches[0].startsWith('<') ? '>' + _after(exprParse.matches[0], '<')\r\n                    : (exprParse.matches[0].startsWith('>') ? '<' + _after(exprParse.matches[0], '>') : exprParse.matches[0]), // <=, >=\r\n            }, {\r\n                operand: operand_b_2,\r\n                operator: exprParse.matches[1], // <=, >=\r\n\r\n            }],\r\n            eval(rect, offsetParentRect, intersectionRect) {\r\n                return this.operand_b.reduce(\r\n                    (prev, curr) => prev && evalExpr(this.operand_a, curr.operator, curr.operand, rect, offsetParentRect, intersectionRect), true\r\n                ) === this.truthy;\r\n            }\r\n        };\r\n    }\r\n    // (operand_a: operand_b), (operand_a <= operand_b)\r\n    if (exprSplit.length > 1) {\r\n        const exprObj = {\r\n            truthy,\r\n            eval(rect, offsetParentRect, intersectionRect) {\r\n                return evalExpr(this.operand_a, this.operator, this.operand_b, rect, offsetParentRect, intersectionRect) === this.truthy;\r\n            }\r\n        };\r\n        exprObj.operand_a = exprSplit[0];\r\n        exprObj.operand_b = exprSplit[1];\r\n        exprObj.operator = exprParse.matches[0];\r\n        if (exprObj.operator === ':') {\r\n            exprObj.operator = '=';\r\n            if (exprObj.operand_a.startsWith('min-')) {\r\n                exprObj.operator = '>=';\r\n                exprObj.operand_a = _after(exprObj.operand_a, 'min-');\r\n            } else if (exprObj.operand_a.startsWith('max-')) {\r\n                exprObj.operator = '<=';\r\n                exprObj.operand_a = _after(exprObj.operand_a, 'max-');\r\n            }\r\n        }\r\n        // ---------------\r\n        varsCallback(exprObj.operand_a, exprObj.operand_b);\r\n        // ---------------\r\n        return exprObj;\r\n    }\r\n    // (expr)\r\n    varsCallback(expr, true);\r\n    return {\r\n        truthy,\r\n        expr: expr,\r\n        eval(rect, offsetParentRect, intersectionRect) {\r\n            return evalExpr(this.expr, 'boolish', true, rect, offsetParentRect, intersectionRect) === this.truthy;\r\n        }\r\n    };\r\n}","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n","\r\n/**\r\n * A UI-focused edition of the fetch API.\r\n * \r\n * Implements progress over the fetch API.\r\n *\r\n * @param string\t\t\t\t\turl\r\n * @param object\t\t\t\t\toptions\r\n * @param function\t\t\t\t\tprogressCallback\r\n * @param bool\t\t\t\t\t    syncWithProgressCallback\r\n *\r\n * @return Promise\r\n */\r\nexport default async function(url, options, progressCallback = null, syncWithProgressCallback = false) {\r\n    if (!progressCallback) {\r\n        return fetch(url, options);\r\n    }\r\n    const callProgressCallback = (phase, valuenow, valuetotal) => {\r\n        var progressCallbackReturn = progressCallback(phase, valuenow, valuetotal);\r\n        return syncWithProgressCallback ? progressCallbackReturn : null;\r\n    };\r\n    return new Promise(async (resolve, reject) => {\r\n        var response;\r\n        try {\r\n            response = await fetch(url, options);\r\n        } catch(e) {\r\n            return reject(e);\r\n        }\r\n        // ------------------\r\n        var contentLength = + (response.headers.get('Content-Length') || NaN),\r\n            recievedLength = 0;\r\n        var reader = response.body.getReader(),\r\n            chunks = [],\r\n            chunk;\r\n        await callProgressCallback('download', 0, contentLength);\r\n        while((chunk = await reader.read()) && !chunk.done) {\r\n            chunks.push(chunk.value);\r\n            recievedLength += chunk.value.length;\r\n            await callProgressCallback('download', recievedLength, !contentLength && chunk.done ? recievedLength : contentLength);\r\n        }\r\n        // -----------\r\n        const _response = {\r\n            bodyUsed: true,\r\n            url: response.url,\r\n            ok: response.ok,\r\n            headers: response.headers,\r\n            redirected: response.redirected,\r\n            statusText: response.statusText,\r\n            status: response.status,\r\n            type: response.type,\r\n            text() {\r\n                return new Promise(resolve => {\r\n                    var data = new Uint8Array(recievedLength);\r\n                    chunks.reduce((position, chunk) => {\r\n                        data.set(chunk, position);\r\n                        return position + chunk.length;\r\n                    }, 0);\r\n                    resolve((new TextDecoder('utf-8')).decode(data));\r\n                });\r\n            },\r\n            json() {\r\n                return this.text().then(text => JSON.parse(text));\r\n            },\r\n            blob() {\r\n                return Promise.resolve(new Blob(chunks));\r\n            }\r\n        };\r\n        resolve(_response);\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport init from '../index.js';\r\nimport matchRect from './matchRect.js';\r\nimport fetch from './fetch.js';\r\n\r\n/**\r\n * ---------------------------\r\n * API-Scope initializations.\r\n * ---------------------------\r\n */\r\n\r\nexport default function() {\r\n    const WebQit = init.call(this);\r\n    if (WebQit.APIS) {\r\n        return WebQit;\r\n    }\r\n    WebQit.APIS = {};\r\n    WebQit.APIS.matchRect = matchRect;\r\n    WebQit.APIS.fetch = fetch;\r\n    // ------\r\n    return WebQit;\r\n}","\r\n/**\r\n * @imports\r\n */\r\nimport init from './index.js';\r\n\r\ninit.call(window);"],"sourceRoot":""}